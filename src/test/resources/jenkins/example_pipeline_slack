node {
   def mvnHome
    try {
   stage('SOURCE') { // for display purposes
      // Get some code from a GitHub repository
     git '' //repo here
     //notifyBuild('STARTED')
   }
   stage('TESTS') {
    // some test logic here for parameters etc...
     
    }
  stage('REPORT') {
      //Generate Allure report for the test run
      allure includeProperties: false, jdk: '', results: [[path: 'target/allure-results']]
    }
    }catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    notifybuild('FAILED')
    throw e
  } 
}

   def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL}allure)"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
 }

